# MySQL
#spring.datasource.url=jdbc:${CLEARDB_DATABASE_URL}
#spring.datasource.username=${CLEARDB_DATABASE_USERNAME}
#spring.datasource.password=${CLEARDB_DATABASE_PASSWORD}
#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#spring.jpa.database-platform=org.hibernate.dialect.MySQL5InnoDBDialect

#Firebase Database URL found in Firebase Web SDK config	String
security.firebase-props.database-url=https://med-man-c1932.firebaseio.com

#server will only look for session cookie to verify request	Boolean
security.firebase-props.enable-strict-server-session=false

#will check if firebase session was revoked elsewhere, this will also add overhead of few seconds to each request. Applicable only if enable-strict-server-session enabled	Boolean
security.firebase-props.enable-check-session-revoked=true

#firebase will revoke refresh tokens everywhere. Applicable only if enable-strict-server-session enabled	Boolean
security.firebase-props.enable-logout-everywhere=false

#Expiration time for long lived session. Applicable only if enable-strict-server-session enabled	Integer
security.firebase-props.session-expiry-in-days=1

#Default Cookie expiration time.	Integer
security.cookie-props.max-age-in-minutes=30

#Cookies will not be accessible to client side scripts.	Boolean
security.cookie-props.http-only=false

#Cookies will be sent only over secure https channel	Boolean
security.cookie-props.secure=false

#Cookies will only be available on provided domain	String
security.cookie-props.domain

#Cookies will only available on provided path. Path "/" will allow access from any page.	String
security.cookie-props.path

#Lets client know that server accepts cookies and other credentials from security.allowed-origins.	String
security.allow-credentials=false

#An array of allowed cross origin domain names.	Array
security.allowed-origins

#An array of HTTP methods server will accept	Array
security.allowed-methods

#An array of HTTP headers server will accept	Array
security.allowed-headers

#An array of rest path on server which can be publicaly accessible. path can be wildcard ie. /public/* will accept /public/path1,/public/path2	Array
security.allowed-public-apis

#An array of exposed headers, this is required only if CSRF tokens are generated by the server	Array
security.exposed-headers